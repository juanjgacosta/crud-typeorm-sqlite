{
  "openapi": "3.0.0",
  "info": {
    "title": "API documentation",
    "description": "This is the documentation for the CRUD SQLite TypeORM project",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Test API"
    }
  ],
  "paths": {
    "/checkHealth": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Server health",
        "description": "Check Server health",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                },
                "examples": {
                  "ExampleOk": {
                    "summary": "server ok",
                    "value": {
                      "message": "ok"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/auth": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register users",
        "description": "Register a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUser"
              },
              "examples": {
                "adminUser": {
                  "value": {
                    "email": "johndoe@email.com",
                    "password": "mudar123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                },
                "examples": {
                  "token": {
                    "value": {
                      "name": "John Doe",
                      "email": "johndoe@email.com",
                      "token": "JwtToken"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Register users",
        "description": "Register a user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "John Doe",
                    "email": "johndoe@email.com",
                    "company": "Company Name",
                    "password": "mudar123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserResponse"
                },
                "example": {
                  "id": "abc123",
                  "name": "John Doe",
                  "email": "johndoe@email.com",
                  "company": "Company Name",
                  "password": "hashPassword",
                  "created_at": "2025-07-23T13:00:14.000Z",
                  "updated_at": "2025-07-23T13:00:14.000Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "status": "error",
                  "message": "User already registered"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                },
                "examples": {
                  "TokenMissing": {
                    "value": {
                      "status": "error",
                      "message": "Token missing"
                    }
                  },
                  "TokenExpired": {
                    "value": {
                      "status": "error",
                      "message": "Token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List users",
        "description": "List all registered users",
        "responses": {
          "200": {
            "description": "Query result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "abc123",
                    "name": "User1 Name",
                    "email": "user1@email.com",
                    "company": "Company Name User 1",
                    "created_at": "2025-07-22T16:19:10.000Z",
                    "updated_at": "2025-07-22T16:19:10.000Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update user",
        "description": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "John Doe Updated",
                    "email": "johndoeupdated@email.com",
                    "company": "Company Name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                },
                "example": {
                  "message": "user - userName@email.com - updated"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                },
                "examples": {
                  "TokenMissing": {
                    "value": {
                      "status": "error",
                      "message": "Token missing"
                    }
                  },
                  "TokenExpired": {
                    "value": {
                      "status": "error",
                      "message": "Token expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                },
                "example": {
                  "status": "error",
                  "message": "User not registered"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete users",
        "description": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Query result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserResponse"
                },
                "example": {
                  "message": "The User - userName@email.com - has been removed"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                },
                "examples": {
                  "TokenMissing": {
                    "value": {
                      "status": "error",
                      "message": "Token missing"
                    }
                  },
                  "TokenExpired": {
                    "value": {
                      "status": "error",
                      "message": "Token expired"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                },
                "example": {
                  "status": "error",
                  "message": "User not registered"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "RegisterUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RegisterUserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "company": {
            "type": "string"
          }
        }
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "DeleteUserResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}